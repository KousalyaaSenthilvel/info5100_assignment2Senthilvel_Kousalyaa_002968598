/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.CarsDataBase;

/**
 *
 * @author dineshmurugesan
 */



public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    CarsDataBase CarsDb;
    
    
    public ViewJPanel(CarsDataBase CarsDb) {
        initComponents();
        
        this.CarsDb = CarsDb;
        
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCars = new javax.swing.JTable();
        viewbutton = new javax.swing.JButton();
        updatebutton = new javax.swing.JButton();
        Makeyearlabel = new javax.swing.JLabel();
        Seatcapacitytext = new javax.swing.JTextField();
        Modelnumberlabel = new javax.swing.JLabel();
        Serialnumbertext = new javax.swing.JTextField();
        Manufacturerlabel = new javax.swing.JLabel();
        Citytext = new javax.swing.JTextField();
        seatcapacitylabel = new javax.swing.JLabel();
        Serialnumberlabel = new javax.swing.JLabel();
        citylabel = new javax.swing.JLabel();
        Maintenancelabel = new javax.swing.JLabel();
        Makeyeartext = new javax.swing.JTextField();
        Modelnumbertext = new javax.swing.JTextField();
        availabititybutton = new javax.swing.JLabel();
        Manutext = new javax.swing.JTextField();
        deletebutton = new javax.swing.JButton();
        AvailablitityChcekbox = new javax.swing.JCheckBox();
        Checkboxmaintenance = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(0, 255, 255));

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Cars Database");

        tblCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Model Number", "Serial Number", "Manufacturer", "Make Year", "Seat Capacity", "City", "MaintenanceCertificaiton", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCars);

        viewbutton.setText("View");
        viewbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbuttonActionPerformed(evt);
            }
        });

        updatebutton.setText("Update");
        updatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebuttonActionPerformed(evt);
            }
        });

        Makeyearlabel.setText("Make Year");

        Modelnumberlabel.setText("Model Number");

        Manufacturerlabel.setText("Manufacturer");

        seatcapacitylabel.setText("Seat Capacity");

        Serialnumberlabel.setText("Serial Number");

        citylabel.setText("City");

        Maintenancelabel.setText("Maintenance Certificate Date");

        availabititybutton.setText("Availability");

        deletebutton.setText("Delete");
        deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });

        Checkboxmaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckboxmaintenanceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Maintenancelabel)
                                .addComponent(citylabel)
                                .addComponent(Serialnumberlabel)
                                .addComponent(seatcapacitylabel)
                                .addComponent(Manufacturerlabel)
                                .addComponent(Modelnumberlabel)
                                .addComponent(Makeyearlabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(availabititybutton)))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AvailablitityChcekbox)
                            .addComponent(Makeyeartext, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Modelnumbertext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Manutext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Seatcapacitytext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Serialnumbertext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Citytext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(Checkboxmaintenance)))
                        .addGap(4, 393, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(viewbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updatebutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deletebutton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Citytext, Makeyeartext, Manutext, Modelnumbertext, Seatcapacitytext, Serialnumbertext});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewbutton)
                    .addComponent(updatebutton)
                    .addComponent(deletebutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(AvailablitityChcekbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Makeyearlabel)
                            .addComponent(Makeyeartext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Modelnumberlabel)
                            .addComponent(Modelnumbertext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Manufacturerlabel)
                            .addComponent(Manutext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seatcapacitylabel)
                            .addComponent(Seatcapacitytext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Serialnumberlabel)
                            .addComponent(Serialnumbertext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(citylabel)
                            .addComponent(Citytext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Maintenancelabel)
                            .addComponent(Checkboxmaintenance)))
                    .addComponent(availabititybutton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebuttonActionPerformed
        // TODO add your handling code here:
         if (Makeyeartext.getText() == null || "".equals(Makeyeartext.getText()))
         {
             
            JOptionPane.showMessageDialog(this, "Please enter valid Make year");
            
         } 
         else if (Modelnumbertext.getText() == null || "".equals(Modelnumbertext.getText()))
         {
             
            JOptionPane.showMessageDialog(this, "Please enter valid model number");
            
         } 
         else if (Manutext.getText() == null || "".equals(Manutext.getText()) 
                 || !Pattern.matches("^[a-zA-Z]+$", Manutext.getText())) {
             
             JOptionPane.showMessageDialog(this, "Please enter valid manufacturer name");
             return;
             
         }
         else if (Seatcapacitytext.getText() == null || "".equals(Seatcapacitytext.getText()) 
                || !Pattern.matches("^[0-9]+$", Seatcapacitytext.getText())) {
            
            JOptionPane.showMessageDialog(this, "Please enter valid seats");
            
         } 
         else if (Serialnumbertext.getText() == null || "".equals(Serialnumbertext.getText()))
         {
            
            JOptionPane.showMessageDialog(this, "Please enter valid serial number");
            
         }
         else if (Citytext.getText() == null || "".equals(Citytext.getText()) 
                || !Pattern.matches("^[a-zA-Z]+$", Citytext.getText())) {
            
            JOptionPane.showMessageDialog(this, "Please enter valid city");
            
         }
        
        else {
        
            int i = tblCars.getSelectedRow();
            
            DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
            Car selectedCars = (Car) model.getValueAt(i, 0);
            
            selectedCars.setModelNumber(Modelnumbertext.getText());
            selectedCars.setSerialNumber(Integer.parseInt(Serialnumbertext.getText()));
            selectedCars.setManufacturer(Manutext.getText());
            selectedCars.setMakeYear(Integer.parseInt(Makeyeartext.getText()));
            selectedCars.setSeatCapacity(Integer.parseInt(Seatcapacitytext.getText()));
            selectedCars.setCity(Citytext.getText());
            selectedCars.setMaintainCertificate(Checkboxmaintenance.isSelected());
            selectedCars.setAvailability(AvailablitityChcekbox.isSelected());
            
            CarsDb.updateCars(i, selectedCars);
            
            JOptionPane.showMessageDialog(this, "Car Details Updated Successfully !!!");
        
        if (i >= 0) {
            
            model.setValueAt(Modelnumbertext.getText(), i, 0);
            model.setValueAt(Serialnumbertext.getText(), i, 1);
            model.setValueAt(Manutext.getText(), i, 2);
            model.setValueAt(Makeyeartext.getText(), i, 3);
            model.setValueAt(Seatcapacitytext.getText(), i, 4);
            model.setValueAt(Citytext.getText(), i, 5);
            model.setValueAt(Checkboxmaintenance.isSelected(), i, 6);    
            model.setValueAt(AvailablitityChcekbox.isSelected(), i, 7);
        } 
        else {
            JOptionPane.showMessageDialog(this, "Error Updating Field !!!");
        }

         }
    }//GEN-LAST:event_updatebuttonActionPerformed

    
    private void viewbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbuttonActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblCars.getSelectedRow();
        
        
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to Delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        Car selectedCars = (Car) model.getValueAt(selectedRowIndex, 0);
        
        AvailablitityChcekbox.setSelected(selectedCars.getAvailability());
        Citytext.setText(selectedCars.getCity());
        Checkboxmaintenance.setSelected(selectedCars.getMaintainCertificate());
        Makeyeartext.setText(String.valueOf(selectedCars.getMakeYear()));
        Manutext.setText(String.valueOf(selectedCars.getManufacturer()));
        Modelnumbertext.setText(selectedCars.getModelNumber());
        Seatcapacitytext.setText(String.valueOf(selectedCars.getSeatCapacity()));
        Serialnumbertext.setText(String.valueOf(selectedCars.getSerialNumber()));      
    }//GEN-LAST:event_viewbuttonActionPerformed

    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblCars.getSelectedRow();
        
        
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to Delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        Car selectedCars = (Car) model.getValueAt(selectedRowIndex, 0);
        
        CarsDb.deleteVitals(selectedCars);
        
        JOptionPane.showMessageDialog(this, "Selected Car Details Deleted");
        
        populateTable();
        
    }//GEN-LAST:event_deletebuttonActionPerformed

    private void CheckboxmaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckboxmaintenanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CheckboxmaintenanceActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AvailablitityChcekbox;
    private javax.swing.JCheckBox Checkboxmaintenance;
    private javax.swing.JTextField Citytext;
    private javax.swing.JLabel Maintenancelabel;
    private javax.swing.JLabel Makeyearlabel;
    private javax.swing.JTextField Makeyeartext;
    private javax.swing.JLabel Manufacturerlabel;
    private javax.swing.JTextField Manutext;
    private javax.swing.JLabel Modelnumberlabel;
    private javax.swing.JTextField Modelnumbertext;
    private javax.swing.JTextField Seatcapacitytext;
    private javax.swing.JLabel Serialnumberlabel;
    private javax.swing.JTextField Serialnumbertext;
    private javax.swing.JLabel availabititybutton;
    private javax.swing.JLabel citylabel;
    private javax.swing.JButton deletebutton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel seatcapacitylabel;
    private javax.swing.JTable tblCars;
    private javax.swing.JButton updatebutton;
    private javax.swing.JButton viewbutton;
    // End of variables declaration//GEN-END:variables

    private void populateTable(){
        
        DefaultTableModel model = (DefaultTableModel) tblCars.getModel();
        model.setRowCount(0);
        
        for(Car cdb : CarsDb.getCarsDb()){
            
            Object[] row = new Object[8];
            row[0] = cdb;
            row[1] = cdb.getSerialNumber();
            row[2] = cdb.getManufacturer();
            row[3] = cdb.getMakeYear();
            row[4] = cdb.getSeatCapacity();
            row[5] = cdb.getCity();
            row[6] = cdb.getMaintainCertificate();
            row[7] = cdb.getAvailability();
            
            model.addRow(row);
        }
        
        
        
    }
    

        
        
        
    
}
